#!/usr/bin/python
import sys
import json
import urllib2

def main():
    module = AnsibleModule(
        argument_spec = dict(
            repository       = dict(required=True),
            build            = dict(required=True),
            artifact         = dict(required=True),
            findArtifact     = dict(required=True, choices=BOOLEANS),
            writeDescription = dict(required=True, choices=BOOLEANS)
        ),
    #Future expansion
    #add_file_common_args=True,
    #supports_check_mode=True
    )

    params = module.params
    repository = params['repository']
    artifact = params['artifact']
    build = params['build']
    findArtifact = params['findArtifact']
    writeDescription = params['writeDescription']
    relativePath = "false"
    
    #If build == last, set buld to last stable build
    if build == "LAST":
        url = "http://jenkins.surescripts.local:18200/job/{0}/lastStableBuild/api/json?tree=number".format(repository)
	data = urllib2.urlopen(url)
        jdata = json.load(data)
        build = jdata['number']

    #Find relative path in jenkins
    url = "http://jenkins.surescripts.local:18200/job/{0}/{1}/api/json?tree=artifacts[fileName,relativePath]".format(repository, build)
    data = urllib2.urlopen(url)
    jdata = json.load(data)

    results = jdata['artifacts']

    for rs in results:
        if rs['fileName'] == artifact:
            relativePath = rs['relativePath']
            changed = True
    if relativePath  == "false":
        relativePath = "no match"
        changed = False
        module.fail_json(msg='Unable to find relative path for artifact')

    module.exit_json(repository=repository, build=build, artifact=artifact, findArtifact=findArtifact, writeDescription=writeDescription, relativePath=relativePath, changed=changed)


from ansible.module_utils.basic import *
#from ansible.module_utils.splitter import *

main()
